#!/usr/bin/env bash

BIN_NAME=$(basename "$0")
COMMAND_NAME=$1
SUB_COMMAND_NAME=$2

sub_help () {
  echo "Usage: $BIN_NAME <command>"
  echo
  echo "Commands:"
  echo "   help             This help message"
  echo "   clean            Clean up caches (brew)"
  echo "   dock             Apply macOS Dock settings"
  echo "   macos            Apply macOS system defaults"
  echo "   test             Run tests"
  echo "   asdf             Update asdf global packages"
  echo "   brew             Update Homebrew/Cask packages"
  echo "   node             Update Node packages"
  echo "   update           Update packages and pkg managers (OS, brew, npm)"
}

sub_test () {
  bats "$DOTFILES_DIR"/test/*.bats
}

sub_update () {
  topgrade
}

sub_clean () {
  brew cleanup
}

sub_macos () {
  for DEFAULTS_FILE in "${DOTFILES_DIR}"/macos/defaults*.sh; do
    echo "Applying ${DEFAULTS_FILE}" && . "${DEFAULTS_FILE}"
  done
  echo "Done. Some changes may require a logout/restart to take effect."
}

sub_dock () {
  . "${DOTFILES_DIR}/macos/dock.sh" && echo "Dock reloaded."
}

sub_asdf () {
  cd ${DOTFILES_DIR} && make asdf-packages
}

sub_brew () {
  cd ${DOTFILES_DIR} && make macos-packages
}

sub_node () {
  cd ${DOTFILES_DIR} && make node-packages
}

case $COMMAND_NAME in
  "" | "-h" | "--help")
    sub_help
    ;;
  *)
    shift
    sub_${COMMAND_NAME} $@
    if [ $? = 127 ]; then
      echo "'$COMMAND_NAME' is not a known command or has errors." >&2
      sub_help
      exit 1
    fi
    ;;
esac
